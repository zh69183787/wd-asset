<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans-2.0.xsd 
http://www.springframework.org/schema/tx 
http://www.springframework.org/schema/tx/spring-tx-2.0.xsd 
http://www.springframework.org/schema/aop 
http://www.springframework.org/schema/aop/spring-aop-2.0.xsd"
	default-autowire="byName">

	<!-- Property Configurer that replaces ${...} placeholders with values from properties files -->

	<bean id="annotationPropertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:config/jdbc.properties</value>
			</list>
		</property>
	</bean>

	<bean id="dataSource"
		class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass">
			<value>${connection.driver_class}</value>
		</property>
		<property name="jdbcUrl">
			<value>${jdbc.connection.url}</value>
		</property>
		<property name="user">
			<value>${jdbc.connection.username}</value>
		</property>
		<property name="password">
			<value>${jdbc.connection.password}</value>
		</property>
		<!--此处继续增加c3p0属性-->
		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。-->
		<property name="acquireIncrement">
			<value>${jdbc.pool.c3p0.acquire_increment}</value>
		</property>

		<!--连接池中保留的最大连接数。-->
		<property name="maxPoolSize" value="${jdbc.pool.c3p0.max_size}" />
		<!--连接池中保留的最小连接数。-->
		<property name="minPoolSize" value="${jdbc.pool.c3p0.min_size}" />
		<!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
		<property name="maxIdleTime"
			value="${jdbc.pool.c3p0.max_idle_time}" />

		<!--定义所有连接测试都执行的测试语句。在使用连接测试的情况下这个一显著提高测试速度。注意：
			测试的表必须在初始数据源的时候就存在。Default: null-->
		<property name="preferredTestQuery"
			value="${jdbc.pool.c3p0.preferred_test_query}" />

		<!--每60秒检查所有连接池中的空闲连接。Default: 0 -->
		<property name="idleConnectionTestPeriod"
			value="${jdbc.pool.c3p0.idle_connection_test_period}" />

		<!--定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 
			<property name="acquireRetryAttempts">30</property>-->

		<!--两次连接中间隔时间，单位毫秒。Default: 1000 
			<property name="acquireRetryDelay">1000</property>-->

		<!--连接关闭时默认将所有未提交的操作回滚。Default: false 
			<property name="autoCommitOnClose">false</property> -->
	</bean>
	<bean id="dataSource2"
		class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass">
			<value>${connection.driver_class2}</value>
		</property>
		<property name="jdbcUrl">
			<value>${jdbc.connection.url2}</value>
		</property>
		<property name="user">
			<value>${jdbc.connection.username2}</value>
		</property>
		<property name="password">
			<value>${jdbc.connection.password2}</value>
		</property>
		<!--此处继续增加c3p0属性-->
		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。-->
		<property name="acquireIncrement">
			<value>${jdbc.pool.c3p0.acquire_increment}</value>
		</property>
		<!--连接池中保留的最大连接数。-->
		<property name="maxPoolSize" value="${jdbc.pool.c3p0.max_size}" />
		<!--连接池中保留的最小连接数。-->
		<property name="minPoolSize" value="${jdbc.pool.c3p0.min_size}" />
		<!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
		<property name="maxIdleTime" value="${jdbc.pool.c3p0.max_idle_time}" />
		<!--定义所有连接测试都执行的测试语句。在使用连接测试的情况下这个一显著提高测试速度。注意：
			测试的表必须在初始数据源的时候就存在。Default: null-->
		<property name="preferredTestQuery" value="${jdbc.pool.c3p0.preferred_test_query}" />
		<!--每60秒检查所有连接池中的空闲连接。Default: 0 -->
		<property name="idleConnectionTestPeriod" value="${jdbc.pool.c3p0.idle_connection_test_period}" />
	</bean>


	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.jdbc.fetch_size">100</prop>
				<prop key="hibernate.jdbc.batch_size">50</prop>
				<!--
					<prop key="hibernate.dialect">org.hibernate.dialect.DB2Dialect</prop>
					
					<prop key="hibernate.dialect">org.hibernate.dialect.Oracle9Dialect</prop>
				-->
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.cache.use_query_cache">false</prop>
				<prop key="hibernate.cache.use_second_level_cache">
					false
				</prop>
				<!-- <prop key="hibernate.hbm2ddl.auto">update</prop> -->
			
			</props>
		</property>

		<property name="annotatedClasses">
			<list>
				<value>com.wonders.asset.model.Station</value>
				<value>com.wonders.asset.model.Line</value>
				<value>com.wonders.asset.model.Enterprise</value>
				<value>com.wonders.asset.model.Equipment</value>
				<value>com.wonders.asset.model.Organization</value>
				<value>com.wonders.asset.model.Department</value>
				<value>com.wonders.asset.model.AssetOwner</value>
				<value>com.wonders.asset.model.AssetPrice</value>
				<value>com.wonders.asset.model.AssetProjectRelation</value>
				<value>com.wonders.asset.model.AssetState</value>
				<value>com.wonders.asset.model.AssetType</value>
				<value>com.wonders.asset.model.SpareType</value>
				<value>com.wonders.asset.model.SpareParts</value>
				<value>com.wonders.asset.model.UnitMaster</value>
				<value>com.wonders.asset.model.Asset</value>
				<value>com.wonders.asset.model.Contract</value>
				<value>com.wonders.asset.model.Project</value>
				<value>com.wonders.asset.model.AssetTask</value>
				<value>com.wonders.asset.model.dw.DwAssetEntityStat</value>
				<value>com.wonders.asset.model.dw.DwAssetLineValue</value>
				<value>com.wonders.asset.model.dw.DwAssetUseOrganizationUnit</value>
				<value>com.wonders.asset.model.dw.DwAssetOwnerOrganizationUnit</value>
				<value>com.wonders.asset.model.dw.DwAssetProjectLineValue</value>
				<value>com.wonders.asset.model.dw.DwHomePageStat</value>
				<value>com.wonders.asset.model.dw.DwProjectCompanyPrice</value>
				<value>com.wonders.asset.model.dw.DwProjectPriceByYear</value>
				<value>com.wonders.asset.model.dw.DwAssetStateLine</value>
				<value>com.wonders.asset.model.AssetMaintenanceCost</value>
				<value>com.wonders.asset.model.AssetOverhaul</value>
				<value>com.wonders.asset.model.dw.DwStopStateAssetValue</value>
				<value>com.wonders.asset.model.dw.DwScrapStateAssetValue</value>
				<value>com.wonders.asset.model.dw.DwOverhaulProjectStat</value>
				<value>com.wonders.asset.model.dw.DwOverhaulMajorType</value>
				<value>com.wonders.asset.model.dw.DwOverhaulBudgetYear</value>
				<value>com.wonders.asset.model.dw.DwScrapAssetUseLife</value>
				<value>com.wonders.asset.model.dw.DwCheckAssetAccuracyYear</value>
				<value>com.wonders.asset.model.dw.DwMaterialsConsume</value>
				<value>com.wonders.asset.model.dw.DwImportantAssetRank</value>
				<value>com.wonders.asset.model.dw.DwOverhaulLine</value>
				<value>com.wonders.asset.model.dw.DwAssetTypeState</value>
				<value>com.wonders.asset.model.dw.DwAssetImportantRatio</value>
				<value>com.wonders.asset.model.Attach</value>
				<value>com.wonders.asset.model.TaskInventory</value>
                <value>com.wonders.asset.model.AssetRecord</value>
                <value>com.wonders.asset.model.DamageAsset</value>
                <value>com.wonders.asset.model.BorrowAsset</value>
                <value>com.wonders.asset.model.LandAsset</value>
                <value>com.wonders.asset.model.HouseAsset</value>
                <value>com.wonders.asset.model.AreaInfo</value>
                <value>com.wonders.asset.model.AssetCheckinfo </value>
                <value>com.wonders.webservice.dto.DamageAssetDto</value>
				<value>com.wonders.webservice.dto.BorrowAssetDto</value>
                <value>com.wonders.webservice.dto.LandAssetDto</value>
                <value>com.wonders.webservice.dto.HouseAssetDto</value>
                <value>com.wonders.webservice.dto.AreaInfoDto</value>
                <value>com.wonders.webservice.dto.AssetTaskDto</value>
                <value>com.wonders.webservice.dto.AssetCheckinfoDto</value>
                <value>com.wonders.webservice.dto.StopAssetDto</value>
                <value>com.wonders.webservice.dto.AllocateAssetDto</value>
                <value>com.wonders.asset.model.StopAsset</value>
                <value>com.wonders.asset.model.AllocateAsset</value>
                <value>com.wonders.asset.model.WorkPlan</value>
                <value>com.wonders.asset.model.Attachment</value>
                <value>com.wonders.webservice.dto.AttachmentDto</value> 
                
                <value>com.wonders.asset.model.DisableAsset</value>   
                <value>com.wonders.webservice.dto.DisableAssetDto</value>
                <value>com.wonders.webservice.dto.AssetRecordDto</value>  
                
			</list>
		</property>

	</bean>
	
	
	<bean id="sessionFactory2"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource2" />
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.jdbc.fetch_size">100</prop>
				<prop key="hibernate.jdbc.batch_size">50</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.cache.use_query_cache">false</prop>
				<prop key="hibernate.cache.use_second_level_cache">  
					false
				</prop>
			</props>
		</property>
	</bean>
	
	


	<!-- 配置Hibernate TransactionManager -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref local="sessionFactory" />
		</property>
	</bean>

	<!--  Transaction interceptor  -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" read-only="false"
				propagation="REQUIRED" />
			<tx:method name="find*" read-only="false"
				propagation="REQUIRED" />
			<tx:method name="insert*" rollback-for="Exception"
				propagation="REQUIRED" />
			<tx:method name="update*" rollback-for="Exception"
				propagation="REQUIRED" />
			<tx:method name="remove*" rollback-for="Exception"
				propagation="REQUIRED" />
			<tx:method name="delete*" rollback-for="Exception"
				propagation="REQUIRED" />
			<tx:method name="view*" rollback-for="Exception"
				propagation="REQUIRED" />
			<tx:method name="make*" rollback-for="Exception"
				propagation="REQUIRED" />
			<tx:method name="*" propagation="SUPPORTS"
				read-only="false" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut id="assetServiceMethods"
			expression="execution(* com.wonders.asset.service..*.*(..))" />
		<aop:advisor advice-ref="txAdvice"
			pointcut-ref="assetServiceMethods" />
	</aop:config>
	
	<aop:config>
		<aop:pointcut expression="execution(* com.wonders.asset.base.service..*.*(..))" id="baseServiceMethods"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="baseServiceMethods"/>
	</aop:config>
</beans>